{
    "extends": [
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@sap/cds/recommended",
        "prettier"
    ],
    "env": {
        "es2022": true,
        "node": true
    },
    "ignorePatterns": ["app/**", "chart/**", "dist/**", "gen/**", "node_modules/**", "tests/**"],
    "overrides": [
        {
            "files": ["*.ts", "*.js", "*.tsx", "*.jsx"],
            "parser": "@typescript-eslint/parser",
            "parserOptions": {
                "project": ["tsconfig.json"]
            },
            "plugins": ["@typescript-eslint/eslint-plugin"],
            "rules": {
                "@typescript-eslint/consistent-type-imports": [
                    "error",
                    {
                        "prefer": "type-imports"
                    }
                ],
                "@typescript-eslint/consistent-type-assertions": ["error", { "assertionStyle": "as" }],
                "@typescript-eslint/dot-notation": "error",
                "@typescript-eslint/explicit-member-accessibility": ["error"],
                "@typescript-eslint/lines-between-class-members": [
                    "error",
                    "always",
                    {
                        "exceptAfterSingleLine": true
                    }
                ],
                "@typescript-eslint/member-delimiter-style": [
                    "error",
                    {
                        "multiline": {
                            "delimiter": "semi",
                            "requireLast": true
                        },
                        "singleline": {
                            "delimiter": "semi",
                            "requireLast": false
                        }
                    }
                ],
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": "interface",
                        "format": ["PascalCase"],
                        "prefix": ["I"]
                    },
                    {
                        "selector": "typeLike",
                        "format": ["PascalCase"]
                    },
                    {
                        "selector": "variable",
                        "types": ["boolean"],
                        "format": ["PascalCase"],
                        "prefix": ["is", "should", "has", "can", "did", "will"]
                    }
                ],
                "@typescript-eslint/no-empty-function": "error",
                "@typescript-eslint/no-empty-interface": "error",
                "@typescript-eslint/no-explicit-any": "off",
                "@typescript-eslint/no-floating-promises": [
                    "error",
                    {
                        "ignoreIIFE": true
                    }
                ],
                "@typescript-eslint/no-inferrable-types": "error",
                "@typescript-eslint/no-misused-new": "error",
                "@typescript-eslint/no-namespace": "error",
                "@typescript-eslint/no-non-null-assertion": "error",
                "@typescript-eslint/no-require-imports": "error",
                "@typescript-eslint/no-this-alias": "error",
                "@typescript-eslint/no-unused-vars": [
                    "error",
                    {
                        "argsIgnorePattern": "^_",
                        "ignoreRestSiblings": true
                    }
                ],
                "@typescript-eslint/no-use-before-define": "error",
                "@typescript-eslint/no-var-requires": "error",
                "@typescript-eslint/padding-line-between-statements": [
                    "error",
                    { "blankLine": "always", "prev": "*", "next": ["class", "interface", "export", "return"] }
                ],
                "@typescript-eslint/prefer-for-of": "error",
                "@typescript-eslint/prefer-namespace-keyword": "error",
                // "@typescript-eslint/prefer-nullish-coalescing": "error",
                "@typescript-eslint/prefer-optional-chain": "error",
                "@typescript-eslint/quotes": [
                    "error",
                    "single",
                    {
                        "avoidEscape": true,
                        "allowTemplateLiterals": true
                    }
                ],
                "@typescript-eslint/return-await": "error",
                "@typescript-eslint/semi": ["error", "always"],
                "@typescript-eslint/type-annotation-spacing": "error",
                "@typescript-eslint/unified-signatures": "error",
                "arrow-body-style": "error",
                "curly": "error",
                "max-classes-per-file": ["error"],
                "no-else-return": "error",
                "no-fallthrough": "error",
                "no-lonely-if": "error",
                "no-multi-spaces": "error",
                "no-sequences": ["error", { "allowInParentheses": false }],
                "no-useless-rename": "error",
                "object-curly-spacing": ["error", "always"],
                "object-shorthand": ["error", "always"],
                "prefer-destructuring": [
                    "error",
                    {
                        "VariableDeclarator": {
                            "array": true,
                            "object": true
                        },
                        "AssignmentExpression": {
                            "array": false,
                            "object": false
                        }
                    }
                ],
                "spaced-comment": "error"
            }
        }
    ]
}
